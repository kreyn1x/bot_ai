import telebot
import logging
from config import BOT_TOKEN, ADMIN_ID
from gpt import GPT
from system_config import MAX_USERS, MAX_SESSIONS, MAX_TOKENS_IN_SESSION, make_prompt
from telebot.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, BotCommand, BotCommandScope
from database import (create_db, create_settings_table, create_prompts_table, add_user_to_database,
                      find_user_data, update_user_data, delete_settings, find_current_session,
                      find_text_by_role_and_user_id, find_latest_prompt, delete_process_answer, count_users)
gpt = GPT()

token = BOT_TOKEN
admin_id = int(ADMIN_ID)
bot = telebot.TeleBot(token=token)

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ –ë–î
create_db()
create_prompts_table()
create_settings_table()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    datefmt="%Y-%m-%d %H",
    filename="log_file.log",
    filemode="w",
    force=True)


# –∫–æ–º–∞–Ω–¥–∞ /debug
@bot.message_handler(commands=['debug'])
def send_logs(message):
    user_id = message.chat.id
# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user_id == admin_id:
        try:

            with open("log_file.log", "rb") as f:
                bot.send_document(message.chat.id, f)

        except telebot.apihelper.ApiTelegramException:

            bot.send_message(message.chat.id, "–õ–æ–≥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")

    else:
        bot.send_message(message.chat.id, "–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")


# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_menu_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add("‚úçÔ∏è –ü–∏—Å–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é")
main_menu_keyboard.add("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üìñ –ú–æ—è –∏—Å—Ç–æ—Ä–∏—è")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ
def check_user(table_name, user_id, message):
    if not find_user_data(table_name, user_id):
        if table_name == "prompts":
            if count_users() == MAX_USERS:
                bot.send_message(message.chat.id, "–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ.")
                logging.info(f"–ü–æ–ø—ã—Ç–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç, –∫–æ–≥–¥–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
                return False
            return True
        add_user_to_database(table_name, user_id)
    return True

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ª–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç—å —É–∂–µ –æ—Ç–≤–µ—Ç
def check_processing_answer(user_id, message):
    data = find_user_data("settings", user_id)
    if data:
        if data['processing_answer'] == 1:
            logging.debug("–ø–æ–ø—ã—Ç–∫–∞ —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –∫–æ–≥–¥–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å —É–∂–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç.")

            bot.reply_to(message, "–ù–µ–π—Ä–æ—Å–µ—Ç—å —É–∂–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –≤–∞—Å. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å, —Å–Ω–∞—á–∞–ª–∞"
                                  " –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞ –æ—Ç –Ω–µ–µ.")
            return True
    return False


# –∫–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=["start"])
def start_bot(message):
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    user_id = message.from_user.id
    if not check_user("prompts", user_id, message=message):  # –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        return

    if check_processing_answer(user_id, message):
        return

    commands = [  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ —Å –æ–±–ª–∞—Å—Ç—å—é –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º
        BotCommand('start', '–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞'),
        BotCommand('help', '–æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ'),
        BotCommand('delete_process_resp', '–∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É —Ä–∞–±–æ—Ç—ã —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é')]

    bot.set_my_commands(commands)
    BotCommandScope('private', chat_id=message.chat.id)

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é YaGPT –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–π. –° –º–æ–µ–π –ø–æ–º–æ—â—å—é –≤—ã"
                                      " —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏, –∂–∞–Ω—Ä–∞–º–∏ –∏ –≤—Å–µ–ª–µ–Ω–Ω—ã–º–∏.\n\n"
                                      '–ù–∞–≤–µ—Ä–Ω–æ–µ –Ω–µ —Ç–µ—Ä–ø–∏—Ç—Å—è –Ω–∞—á–∞—Ç—å? –¢–æ–≥–¥–∞ –∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úçÔ∏è –ü–∏—Å–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é"\n\n'
                                      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ.', reply_markup=main_menu_keyboard, parse_mode="html")


# –∫–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(commands=["help"])
def about_bot(message):
    user_id = message.from_user.id
    if not check_user("prompts", user_id, message=message):  # –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        return

    if check_processing_answer(user_id, message):
        return
    bot.send_message(message.chat.id, '–¢–∞–∫ –∫–∞–∫ —è –∏—Å–ø–æ–ª—å–∑—É—é –ø–ª–∞—Ç–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é, —Ç–æ —É –≤–∞—Å'
                                      ' <b>–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫</b> –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ –º–Ω–æ–π.\n\n'
                                      '–ö–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é '
                                      '(–ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞—á–Ω–µ–º!"), –≤—ã <b>–Ω–∞—á–∏–Ω–∞–µ—Ç–µ —Å–µ—Å—Å–∏—é.</b>\n\n'
                                      f'<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Å—Å–∏–π:</b> {MAX_SESSIONS}\n'
                                      f'–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ–Ω–∏ –ø–æ—Ç—Ä–∞—á–µ–Ω—ã, –≤—ã –±–æ–ª—å—à–µ <b>–Ω–µ —Å–º–æ–∂–µ—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å '
                                      f'–Ω–µ–π—Ä–æ—Å–µ—Ç—å—é</b>.\n\n'
                                      f'–ö–∞–∂–¥–∞—è —Å–µ—Å—Å–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ç–æ–∫–µ–Ω–æ–≤ (—Ç.–µ. –æ–±—ä–µ–º—É —Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã'
                                      f' –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏ –ø–æ–ª—É—á–∏—Ç—å).\n\n'
                                      f'<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Å–µ—Å—Å–∏–∏:</b> {MAX_TOKENS_IN_SESSION}.\n'
                                      f'–ö–∞–∫ —Ç–æ–ª—å–∫–æ —ç—Ç–æ—Ç <b>–ª–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω, —Å–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è.</b> '
                                      f' –ù–æ, –µ—Å–ª–∏ —É –≤–∞—Å –µ—â–µ –æ—Å—Ç–∞–ª–∏—Å—å'
                                      f' —Å–µ—Å—Å–∏–∏, —Ç–æ –≤—ã <b>–º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–∞—à—É –∏—Å—Ç–æ—Ä–∏—é –≤ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏.</b>\n\n'
                                      f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –≤—ã —É–∂–µ –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏, –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏, –Ω–∞–∂–∞–≤ '
                                      f'–Ω–∞ –∫–Ω–æ–ø–∫—É <b>"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"</b>.\n\n'
                                      f'<b>üìñ –ú–æ—è –∏—Å—Ç–æ—Ä–∏—è</b> - –ø–æ–∫–∞–∂–µ—Ç –≤–∞—à—É –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–æ–∑–¥–∞–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–ª–∏–∫–æ–º.\n\n'
                                      f'<b>‚úçÔ∏è –ü–∏—Å–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é</b> - –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏. (—Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è)',
                     reply_markup=main_menu_keyboard, parse_mode="html")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –∂–∞–Ω—Ä–∞
@bot.message_handler(content_types=["text"], func=lambda message: message.text.lower() == "‚úçÔ∏è –ø–∏—Å–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é")
def make_genre(message):
    user_id = message.from_user.id
    if not check_user("prompts", user_id, message=message):  # –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        return

    if check_processing_answer(user_id, message):
        return

    if find_current_session(user_id) + 1 > MAX_SESSIONS:
        bot.send_message(message.chat.id, "–í—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –ª–∏–º–∏—Ç —Å–µ—Å—Å–∏–π! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –ø–æ–∑–∂–µ.",
                         reply_markup=main_menu_keyboard)
        return

    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add("–ë–æ–µ–≤–∏–∫", "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ")
    keyboard.add("–•–æ—Ä—Ä–æ—Ä")
    keyboard.add("–í—ã—Ö–æ–¥")
    bot.send_message(message.chat.id, "–î–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö:",
                     reply_markup=keyboard)

    delete_settings("settings")
    check_user("settings", user_id, message)
    bot.register_next_step_handler(message, make_character)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
def make_character(message, is_next_step=False):
    if message.text not in ["–ë–æ–µ–≤–∏–∫", "–•–æ—Ä—Ä–æ—Ä", "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ"] and not is_next_step:
        if message.text.lower() == "–≤—ã—Ö–æ–¥":
            bot.send_message(message.chat.id, "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∏—Å—Ç–æ—Ä–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å "
                                              '—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úçÔ∏è –ü–∏—Å–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é"',
                             reply_markup=main_menu_keyboard)
            return

        bot.send_message(message.chat.id, "–ö–∞–∂–µ—Ç—Å—è, –≤—ã –≤—ã–±—Ä–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
        make_genre(message)
        return
    elif message.text in ["–ë–æ–µ–≤–∏–∫", "–•–æ—Ä—Ä–æ—Ä", "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ"]:
        user_id = message.from_user.id

        check_user("settings", user_id, message)
        update_user_data("settings", user_id=user_id, column_name="genre", value=message.text)

    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add("–ß–µ–ª–æ–≤–µ–∫-–ø–∞—É–∫", "–®—Ä–µ–∫")
    keyboard.add("–ü–æ–ª—É–º–Ω–∞ –õ–∞–≤–≥—É–¥", "–ù—ç–Ω—Å–∏ –î—Ä—é")
    keyboard.add("–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞")
    bot.send_message(message.chat.id, "–°—É–ø–µ—Ä! –ê —á—Ç–æ –Ω–∞—Å—á–µ—Ç <b>–ø–µ—Ä—Å–æ–Ω–∞–∂–∞</b>?\n\n"
                                      "<b>–ß–µ–ª–æ–≤–µ–∫-–ø–∞—É–∫</b> - –ü–∏—Ç–µ—Ä –ü–∞—Ä–∫–µ—Ä –ø–æ–ª—É—á–∏–ª —Å–≤–æ–∏ —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ "
                                      "–ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –µ–≥–æ —É–∫—É—Å–∏–ª —Ä–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω—ã–π –ø–∞—É–∫, –∏ —Ç–µ–ø–µ—Ä—å –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏—Ö, "
                                      "—á—Ç–æ–±—ã –±–æ—Ä–æ—Ç—å—Å—è –ø—Ä–æ—Ç–∏–≤ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏ –∑–∞—â–∏—â–∞—Ç—å –Ω–µ–≤–∏–Ω–Ω—ã—Ö. –í –æ–±—ã—á–Ω–æ–π –∂–∏–∑–Ω–∏ –æ–Ω - "
                                      "—Å—Ç—É–¥–µ–Ω—Ç –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ –ø–æ –∏–º–µ–Ω–∏ –ü–∏—Ç–µ—Ä –ü–∞—Ä–∫–µ—Ä. –ù–æ –∫–æ–≥–¥–∞ –Ω–∞—Å—Ç—É–ø–∞–µ—Ç –Ω–æ—á—å, –æ–Ω –Ω–∞–¥–µ–≤–∞–µ—Ç "
                                      "—Å–≤–æ–π –∫–æ—Å—Ç—é–º –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –±–µ—Å—Å—Ç—Ä–∞—à–Ω—ã–º –≥–µ—Ä–æ–µ–º, –≥–æ—Ç–æ–≤—ã–º –∫ –±–æ—Ä—å–±–µ —Å –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é "
                                      "–∏ –∑–∞—â–∏—Ç–µ –º–∏—Ä–Ω—ã—Ö –∂–∏—Ç–µ–ª–µ–π.\n\n"
                                      '<b>–®—Ä–µ–∫</b> - —ç—Ç–æ –±–æ–ª—å—à–æ–π, –∑–µ–ª—ë–Ω—ã–π, –ª—é—Ç–æ-–≥—Ä–æ–∑–Ω—ã–π –æ–≥—Ä, –∂–∏–≤—É—â–∏–π –≤ '
                                      '—É–µ–¥–∏–Ω–µ–Ω–∏–∏ –Ω–∞ –±–æ–ª–æ—Ç–µ –≤ –≥—É—Å—Ç–æ–º –ª–µ—Å—É. –û–Ω –∏–∑–≤–µ—Å—Ç–µ–Ω —Å–≤–æ–∏–º –≥—Ä—É–±—ã–º, –Ω–æ –¥–æ–±—Ä—ã–º '
                                      '—Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º –∏ –Ω–µ–∂–µ–ª–∞–Ω–∏–µ–º –∏–º–µ—Ç—å –¥–µ–ª–æ —Å –æ–∫—Ä—É–∂–∞—é—â–∏–º –º–∏—Ä–æ–º. –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Å–≤–æ—é '
                                      '–≤–Ω–µ—à–Ω–æ—Å—Ç—å, –®—Ä–µ–∫ –∏–º–µ–µ—Ç –∑–æ–ª–æ—Ç–æ–µ —Å–µ—Ä–¥—Ü–µ –∏ —Å—Ç–∞—Ä–∞–µ—Ç—Å—è –∏–∑–±–µ–≥–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤, '
                                      '–∫–æ–≥–¥–∞ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ. –û–¥–Ω–∞–∫–æ –µ—Å–ª–∏ –µ–≥–æ –±–ª–∏–∑–∫–∏–º –∏–ª–∏ –¥—Ä—É–∑—å—è–º —É–≥—Ä–æ–∂–∞–µ—Ç –æ–ø–∞—Å–Ω–æ—Å—Ç—å, '
                                      '–æ–Ω —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ö—Ä–∞–±—Ä—ã–º –∑–∞—â–∏—Ç–Ω–∏–∫–æ–º –∏ –Ω–µ –±–æ–∏—Ç—Å—è —Ä–∏—Å–∫–æ–≤–∞—Ç—å —Å–≤–æ–µ–π –∂–∏–∑–Ω—å—é —Ä–∞–¥–∏ –∏—Ö '
                                      '—Å–ø–∞—Å–µ–Ω–∏—è. \n\n'
                                      '<b>–ü–æ–ª—É–º–Ω–∞ –õ–∞–≤–≥—É–¥</b> -  —Å—Ç—É–¥–µ–Ω—Ç–∫–∞ –ö–æ–≥—Ç–µ–≤—Ä–∞–Ω–∞, –¥–æ—á—å –∏–∑–¥–∞—Ç–µ–ª—è –∂—É—Ä–Ω–∞–ª–∞ ‚Äú–ü—Ä–∏–¥–∏—Ä–∞‚Äù '
                                      '–ö—Å–µ–Ω–æ—Ñ–∏–ª–∏—É—Å–∞ –õ–∞–≤–≥—É–¥–∞. –£ –Ω–µ—ë —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –≤ –æ–¥–µ–∂–¥–µ –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π –æ–±—Ä–∞–∑ '
                                      '–º—ã—Å–ª–µ–π. –ü–æ–ª—É–º–Ω–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤–µ—Ä–Ω—ã–º –¥—Ä—É–≥–æ–º –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä–∞ –∏ –ø–æ–º–æ–≥–∞–µ—Ç –µ–º—É –≤ –±–æ—Ä—å–±–µ '
                                      '—Å –í–æ–ª–∞–Ω-–¥–µ-–ú–æ—Ä—Ç–æ–º.\n\n'
                                      '<b>–ù—ç–Ω—Å–∏ –î—Ä—é</b> - –æ–±—ã—á–Ω–∞—è –¥–µ–≤—É—à–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ª—é–±–∏—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è —Å–æ —Å–≤–æ–∏–º–∏ '
                                      '–¥—Ä—É–∑—å—è–º–∏ –ë–µ—Å—Å –∏ –î–∂–µ—Å—Å, —Ö–æ–¥–∏—Ç—å –Ω–∞ —Ç–∞–Ω—Ü—ã –∏ —á–∏—Ç–∞—Ç—å –¥–µ—Ç–µ–∫—Ç–∏–≤—ã. –û–Ω–∞ —Ç–∞–∫–∂–µ —Å—Ç–∞—Ä–∞–µ—Ç—Å—è '
                                      '–ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º, –ø–æ–ø–∞–≤—à–∏–º –≤ –±–µ–¥—É.–ù—ç–Ω—Å–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Å—Ç—Ä—ã–º —É–º–æ–º, '
                                      '–ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é, —É–º–µ–Ω–∏–µ–º –∑–∞–º–µ—á–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –∏ –Ω–µ –±–æ—è—Ç—å—Å—è —Ä–∏—Å–∫–æ–≤–∞—Ç—å. –û–Ω–∞ —Ç–∞–∫–∂–µ '
                                      '–æ–±–ª–∞–¥–∞–µ—Ç —Ö–æ—Ä–æ—à–∏–º —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞ –∏ –ª—é–±–∏—Ç –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è. –í –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π '
                                      '–ù—ç–Ω—Å–∏ —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –æ–ø–∞—Å–Ω–æ—Å—Ç—è–º–∏, –Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–≤–æ–µ–π —Å–º–µ–∫–∞–ª–∫–µ –∏ '
                                      '–æ—Ç–≤–∞–≥–µ –≤—Å–µ–≥–¥–∞ –≤—ã—Ö–æ–¥–∏—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º.', reply_markup=keyboard, parse_mode="html")
    bot.register_next_step_handler(message, make_place)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å–µ—Ç—Ç–∏–Ω–≥–∞
def make_place(message, is_next_step=False):
    if message.text not in ["–ß–µ–ª–æ–≤–µ–∫-–ø–∞—É–∫", "–®—Ä–µ–∫", "–ü–æ–ª—É–º–Ω–∞ –õ–∞–≤–≥—É–¥", "–ù—ç–Ω—Å–∏ –î—Ä—é"] and not is_next_step:
        if check_restart(message):
            return
        bot.send_message(message.chat.id, "–ö–∞–∂–µ—Ç—Å—è, –≤—ã –≤—ã–±—Ä–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
        make_character(message, True)
        return
    elif message.text in ["–ß–µ–ª–æ–≤–µ–∫-–ø–∞—É–∫", "–®—Ä–µ–∫", "–ü–æ–ª—É–º–Ω–∞ –õ–∞–≤–≥—É–¥", "–ù—ç–Ω—Å–∏ –î—Ä—é"]:
        user_id = message.from_user.id

        check_user("settings", user_id, message)
        update_user_data("settings", user_id=user_id, column_name="character", value=message.text)

    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add("üåÉ –ì–æ—Ä–æ–¥ —Ç–µ–Ω–µ–π", "üèùÔ∏è –ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –æ—Å—Ç—Ä–æ–≤")
    keyboard.add("–ö–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞")
    keyboard.add("–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞")
    bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ <b>–º–µ—Å—Ç–æ —Å–æ–±—ã—Ç–∏–π:</b>\n\n"
                                      "<b>üåÉ –ì–æ—Ä–æ–¥ —Ç–µ–Ω–µ–π</b> - –º–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–æ–≤ –æ—Ç –≤–æ—Ä–∏—à–µ–∫ –¥–æ –∫—Ä—É–ø–Ω—ã—Ö "
                                      "–≥—Ä—É–ø–ø–∏—Ä–æ–≤–æ–∫. –ó–¥–µ—Å—å –∂–∏–≤—É—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –∏—Å—Ç–æ—Ä–∏—è–º–∏ –∏ —Ç–∞–π–Ω–∞–º–∏, "
                                      "–∞ –¥–æ–±—Ä–æ –∏ –∑–ª–æ —Å—Ä–∞–∂–∞—é—Ç—Å—è –∑–∞ –º–µ—Å—Ç–æ –ø–æ–¥ —Å–æ–ª–Ω—Ü–µ–º. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –≥–æ—Ä–æ–¥–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç "
                                      "–Ω–æ–≤—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è –∏ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n\n"
                                      "<b>–ö–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞</b> - —Å—é–∂–µ—Ç –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Å–∏—Ç—É–∞—Ü–∏—é –≤ –º–æ–º–µ–Ω—Ç "
                                      "–≥–ª–æ–±–∞–ª—å–Ω–æ–π –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—ã, –∫–æ—Ç–æ—Ä–∞—è –ø–æ—Å—Ç–∞–≤–∏–ª–∞ "
                                      "–ø–æ–¥ –≤–æ–ø—Ä–æ—Å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞.\n\n"
                                      "<b>üèùÔ∏è –ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –æ—Å—Ç—Ä–æ–≤</b> ‚Äî —ç—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–π –∏ "
                                      "—Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Å—Ç—Ä–æ–≤. "
                                      "–û–Ω –±—ã–ª —Å–ª—É—á–∞–π–Ω–æ –æ—Ç–∫—Ä—ã—Ç –≥—Ä—É–ø–ø–æ–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–µ–π, "
                                      "–∫–æ—Ç–æ—Ä—ã—Ö —Å–∏–ª—å–Ω—ã–π —à—Ç–æ—Ä–º –≤—ã–Ω–µ—Å –∫ –±–µ—Ä–µ–≥–∞–º –æ—Å—Ç—Ä–æ–≤–∞.",
                     reply_markup=keyboard, parse_mode="html")
    bot.register_next_step_handler(message, add_info)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def add_info(message, is_next_step=False):
    if message.text not in ["üåÉ –ì–æ—Ä–æ–¥ —Ç–µ–Ω–µ–π", "–ö–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞", "üèùÔ∏è –ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –æ—Å—Ç—Ä–æ–≤"] and not is_next_step:
        if check_restart(message):
            return
        bot.send_message(message.chat.id, "–ö–∞–∂–µ—Ç—Å—è, –≤—ã –≤—ã–±—Ä–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
        make_place(message, True)
        return
    elif message.text in ["üåÉ –ì–æ—Ä–æ–¥ —Ç–µ–Ω–µ–π", "–ö–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞", "üèùÔ∏è –ó–∞—Ç–µ—Ä—è–Ω–Ω—ã–π –æ—Å—Ç—Ä–æ–≤"]:
        user_id = message.from_user.id

        check_user("settings", user_id, message)
        update_user_data("settings", user_id=user_id, column_name="place", value=message.text)

    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add("–ù–∞—á–∏–Ω–∞–µ–º!")
    keyboard.add("–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞")

    user_id = message.from_user.id
    settings_data = find_user_data("settings", user_id)
    bot.send_message(message.chat.id, '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:\n\n'
                                      f'<b>–ñ–∞–Ω—Ä:</b> {settings_data["genre"]}\n\n'
                                      f'<b>–ü–µ—Ä—Å–æ–Ω–∞–∂:</b> {settings_data["character"]}\n\n'
                                      f'<b>–°–µ—Ç—Ç–∏–Ω–≥:</b> {settings_data["place"]}\n\n'
                                      f'–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞"\n\n'
                                      "–ö–∞–∂–µ—Ç—Å—è, —è –≥–æ—Ç–æ–≤ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è –≤–∞—Å! –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å,"
                                      ' –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ. –í –∏–Ω–æ–º —Å–ª—É—á–∞–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∏–Ω–∞–µ–º!" –¥–ª—è –Ω–∞—á–∞–ª–∞'
                                      ' –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏.\n\n', reply_markup=keyboard, parse_mode="html")

    bot.register_next_step_handler(message, check_ans)


def check_ans(message):
    user_id = message.from_user.id
    if message.text.lower() == "–Ω–∞—á–∏–Ω–∞–µ–º!":
        if not find_user_data("prompts", user_id):
            session_id = 1
        else:
            prompts_data = find_current_session(user_id)
            session_id = prompts_data + 1
        start_generating(message, session_id)
        return

    if check_restart(message):
        return

    check_user("settings", user_id, message)
    settings_data = find_user_data("settings", user_id)

    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –£—á—Ç—É!\n\n –ß—Ç–æ-—Ç–æ –µ—â–µ? –ï—Å–ª–∏ –Ω–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∏–Ω–∞–µ–º!"')

    info = settings_data["additional_info"]

    if info:
        info += ", " + message.text
    else:
        info += message.text
    info += ". "
    update_user_data("settings", user_id=user_id, column_name="additional_info", value=info)

    bot.register_next_step_handler(message, check_ans)


def check_restart(message):
    if message.text.lower() == "–Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞":
        make_genre(message)
        return True
    return False


def start_generating(message, session_id):
    if not message.text:
        bot.send_message(message.chat.id, "–ö–∞–∂–µ—Ç—Å—è, –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å. –Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å"
                                          "—Å —Ç–∞–∫–∏–º–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.")
        bot.register_next_step_handler(message, start_generating, session_id)
        return

    keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add("–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é")

    if message.text == "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏":
        session_id += 1

    if session_id > MAX_SESSIONS:
        bot.send_message(message.chat.id, "–í—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –ª–∏–º–∏—Ç —Å–µ—Å—Å–∏–π! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –ø–æ–∑–∂–µ.",
                         reply_markup=main_menu_keyboard)
        return

    prompt = message.text

    if prompt == "–í—ã—Ö–æ–¥":
        bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ! –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úçÔ∏è –ü–∏—Å–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é"',
                         reply_markup=main_menu_keyboard)
        return

    if prompt == "üìñ –ú–æ—è –∏—Å—Ç–æ—Ä–∏—è":
        whole_story(message)
        bot.register_next_step_handler(message, start_generating, session_id)
        return

    user_id = message.from_user.id

    if session_id > find_current_session(user_id):  # –µ—Å–ª–∏ –Ω–∞—á–∞—Ç–∞ –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è
        if prompt == "–ù–∞—á–∏–Ω–∞–µ–º!":
            mode = "start"
            settings_data = find_user_data("settings", user_id)
            prompt = make_prompt(settings_data)  # —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
            special_mode = False
            text = "–ù–∞—á–∞–ª –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏—Å—Ç–æ—Ä–∏–∏! –û–∂–∏–¥–∞–π—Ç–µ..."

        else:  # –µ—Å–ª–∏ –ø—Ä–∏ –ª–∏–º–∏—Ç–µ —Ç–æ–∫–µ–Ω–æ–≤ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –≤ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏
            if prompt == "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏":
                bot.send_message(message.chat.id, "–ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–∞—à—É –∏—Å—Ç–æ—Ä–∏—é.", reply_markup=keyboard)
                bot.register_next_step_handler(message, start_generating, session_id)
                return
            special_mode = True
            if prompt == "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é":
                mode = "end"
                text = "–û—Ç–ª–∏—á–Ω–æ! –£–∂–µ –ø—Ä–∏–¥—É–º—ã–≤–∞—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ..."

            else:
                mode = "continue"
                keyboard.add("üìñ –ú–æ—è –∏—Å—Ç–æ—Ä–∏—è–∏—è —Ü–µ–ª–∏–∫–æ–º")
                text = "–û—Ç–ª–∏—á–Ω–æ! –£–∂–µ –ø—Ä–∏–¥—É–º—ã–≤–∞—é –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ..."

    elif prompt == "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é":
        mode = "end"
        special_mode = False
        text = "–û—Ç–ª–∏—á–Ω–æ! –£–∂–µ –ø—Ä–∏–¥—É–º—ã–≤–∞—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ..."
    else:
        mode = "continue"
        keyboard.add("üìñ –ú–æ—è –∏—Å—Ç–æ—Ä–∏—è")
        special_mode = False
        text = "–û—Ç–ª–∏—á–Ω–æ! –£–∂–µ –ø—Ä–∏–¥—É–º—ã–≤–∞—é –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ..."

    msg = bot.send_message(message.chat.id, text, reply_markup=ReplyKeyboardRemove())
    bot.send_chat_action(message.chat.id, action="TYPING")

    update_user_data("settings", user_id, "processing_answer", 1)

    answer = gpt.ask_gpt(prompt, mode, session_id, user_id, special_mode=special_mode)

    update_user_data("settings", user_id, "processing_answer", 0)

    bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)

    tokens_in_session = find_latest_prompt(user_id)["tokens"]
    if not answer or tokens_in_session > MAX_TOKENS_IN_SESSION:  # –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤

        keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add("–í—ã—Ö–æ–¥")
        answer = find_text_by_role_and_user_id(user_id, "assistant")

        text = f"<b> –¢–µ–∫—É—â–∞—è –∏—Å—Ç–æ—Ä–∏—è —Ü–µ–ª–∏–∫–æ–º</b> (—Å–µ—Å—Å–∏—è {session_id}/{MAX_SESSIONS}):\n\n{answer}"

        if session_id != MAX_SESSIONS:  # –µ—Å–ª–∏ —Å–µ—Å—Å–∏–π –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
            keyboard.add("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏")
            text += ('\n\n\n–ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏", –≤—ã –ø–µ—Ä–µ–π–¥–µ—Ç–µ –≤ —Å–ª–µ–¥—É—é—â—É—é —Å–µ—Å—Å–∏—é, –Ω–æ '
                     '–≤–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—Å—è.\n\n')

        bot.send_message(message.chat.id, "–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ç–æ–∫–µ–Ω—ã –¥–ª—è —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏! –°–µ—Å—Å–∏–π –æ—Å—Ç–∞–ª–æ—Å—å: "
                                          f"{MAX_SESSIONS - session_id}.",
                         reply_markup=keyboard)

        bot.send_message(message.chat.id, text, parse_mode="html")

        bot.register_next_step_handler(message, start_generating, session_id)
        return

    bot.send_message(message.chat.id, f"<b>–ò—Å—Ç–æ—Ä–∏—è</b> (—Å–µ—Å—Å–∏—è {session_id}/{MAX_SESSIONS}):\n\n{answer}",
                     parse_mode="html", reply_markup=keyboard)  # –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏

    if message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é" or prompt == "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é":
        bot.send_message(message.chat.id, "–í–æ—Ç –∏ –≤—Å—è –∏—Å—Ç–æ—Ä–∏—è!", reply_markup=main_menu_keyboard)
        return

    if tokens_in_session > MAX_TOKENS_IN_SESSION - 100:
        bot.send_message(message.chat.id, f"–í—ã –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç–µ—Å—å –∫ –ª–∏–º–∏—Ç—É —Ç–æ–∫–µ–Ω–æ–≤: "
                                          f"<b>{tokens_in_session}/{MAX_TOKENS_IN_SESSION}</b>", parse_mode="html")

    elif tokens_in_session > MAX_TOKENS_IN_SESSION / 2:
        bot.send_message(message.chat.id, f"–í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ –±–æ–ª—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã —Ç–æ–∫–µ–Ω–æ–≤: "
                                          f"<b>{tokens_in_session}/{MAX_TOKENS_IN_SESSION}</b>", parse_mode="html")

    bot.register_next_step_handler(message, start_generating, session_id)


@bot.message_handler(content_types=["text"], func=lambda message: message.text.lower() == "üìñ –º–æ—è –∏—Å—Ç–æ—Ä–∏—è")
def whole_story(message):
    user_id = message.from_user.id
    if not check_user("prompts", user_id, message=message):  # –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        return

    if check_processing_answer(user_id, message):
        return

    story = find_text_by_role_and_user_id(user_id, "assistant")
    if not story:
        story = ('–£ –≤–∞—Å –ø–æ–∫–∞ <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π</b> –≥–æ—Ç–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏. '
                 '–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –æ–¥–Ω—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úçÔ∏è –ü–∏—Å–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é"')
    else:
        story = "<b>–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é –≤–∞–º –≤–∞—à—É –ø–æ—Å–ª–µ–¥–Ω—é—é –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–ª–∏–∫–æ–º:</b>\n\n" + story
    bot.send_message(message.chat.id, story, parse_mode="html")


@bot.message_handler(content_types=["text"], func=lambda message: message.text.lower() == "üìä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
def send_stats(message):
    user_id = message.from_user.id
    if not check_user("prompts", user_id, message=message):  # –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        return

    prompt_data = find_latest_prompt(user_id)
    if not prompt_data:
        bot.send_message(message.chat.id, "–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
                                          f"<b>–°–µ—Å—Å–∏–π –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–æ:</b> 0\n\n"
                                          f"<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Å—Å–∏–π:</b> {MAX_SESSIONS}\n\n"
                                          f"–í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∏–Ω–∞–ª–∏ <b>–Ω–∏ –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏</b>, –ø–æ—ç—Ç–æ–º—É –∏ —Ç–æ–∫–µ–Ω—ã –ø–æ–∫–∞ <b>–Ω–µ "
                                          f"—Ç—Ä–∞—Ç–∏–ª–∏.</b>\n\n"
                                          f"<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Å–µ—Å—Å–∏–∏:</b> {MAX_TOKENS_IN_SESSION}",
                         parse_mode="html")
        return

    bot.send_message(message.chat.id, "–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
                                      f"<b>–°–µ—Å—Å–∏–π –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–æ:</b> {prompt_data['session_id']}\n\n"
                                      f"<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Å—Å–∏–π:</b> {MAX_SESSIONS}\n\n"
                                      f"<b>–í –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏</b> –≤—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ <b>{prompt_data['tokens']}</b> "
                                      f"—Ç–æ–∫–µ–Ω–æ–≤.\n\n"
                                      f"<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Å–µ—Å—Å–∏–∏:</b> {MAX_TOKENS_IN_SESSION}",
                     parse_mode="html")


# –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –±–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –≤–æ –≤—Ä–µ–º—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
@bot.message_handler(commands=["delete_process_resp"])
def delete_process_resp(message):
    user_id = message.from_user.id
    if user_id == admin_id:
        delete_process_answer()
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞.")
    else:
        bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω.")


CONTENT_TYPES = ["text", "audio", "document", "photo", "sticker", "video", "video_note", "voice"]


@bot.message_handler(content_types=CONTENT_TYPES)
def any_msg(message):
    user_id = message.from_user.id
    if not check_user("prompts", user_id, message=message):  # –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        return

    if check_processing_answer(user_id, message):
        return
    bot.send_message(message.chat.id, 'üëç \n'
                                      '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é, —Ç–æ —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úçÔ∏è –ü–∏—Å–∞—Ç—å '
                                      '–∏—Å—Ç–æ—Ä–∏—é"',
                     reply_markup=main_menu_keyboard)


# –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ üéâ
if __name__ == "__main__":
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    bot.infinity_polling()
